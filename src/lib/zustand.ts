// https://tomas-svojanovsky.medium.com/stop-unnecessary-re-renders-autogenerated-selectors-in-zustand-next-js-0a1c7bde887e
// https://docs.pmnd.rs/zustand/guides/auto-generating-selectors

import type { StoreApi, UseBoundStore } from "zustand";

type WithSelectors<S> = S extends { getState: () => infer T }
  ? S & { use: { [K in keyof T]: () => T[K] } }
  : never;

function createSelectors<S extends UseBoundStore<StoreApi<object>>>(_store: S) {
  const store = _store as WithSelectors<typeof _store>;
  store.use = {};
  for (const k of Object.keys(store.getState())) {
    (store.use as Record<string, unknown>)[k] = () => store((s) => s[k as keyof typeof s]);
  }

  return store;
}

export { createSelectors };
